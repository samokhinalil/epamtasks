@model UsersAndAwards.Web.Models.UserWebViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserWebViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p>Awards</p>
            @*@foreach (var award in Model.Awards)
        {
            bool isChecked = Model.AvailableAwards.Exists(a => a.ID == award.ID && a.Checked == true);
            <label>
                <input id="@award.ID" name="@award.ID" type="checkbox" title="@award.Title" checked="@isChecked" />
                @award.Title
            </label>
            <br>

        }*@

            @for (int i = 0; i < Model.Awards.Count; i++)
            {
                var award = Model.Awards[i];
                bool isChecked = Model.AvailableAwards.Exists(a => a.ID == award.ID && a.Checked == true);
                <label>
                    <input id="@award.ID" name="@award.ID" type="checkbox" title="@award.Title" checked="@isChecked" />
                    @award.Title
                </label>
                <br>
                @*@Html.EditorFor(model => model.AvailableAwards.FirstOrDefault(a => a.ID == award.ID).Checked)*@
            }

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
